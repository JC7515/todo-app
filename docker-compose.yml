version: '2'

services:


   backend1: 
    container_name: backend-1
    # build: .  no utilizo build porque creara 3 versiones de mi imagen dockerfile iguales solo que con diferente nombre 
    image: server-todoapp:1.0
    # ports: 
    #  - 4600:4400
    # environment: 
    #     SEQ_DB: postgres
    #     SEQ_USER: postgres
    #     SEQ_PW: root123
    #     PORT: 5200
    #     DATABASE_URL: ${DATABASE_URL}
    # volumes:
    #   - ./src/host:/etc/host
    command: 'npm start'
    depends_on:
      - db

   backend2: 
    container_name: backend-2
    # build: .
    image: server-todoapp:1.0
    # ports: 
    #  - 4700:4400
    # environment: 
    #     SEQ_DB: postgres
    #     SEQ_USER: postgres
    #     SEQ_PW: root123
    #     PORT: 5200
    #     DATABASE_URL: ${DATABASE_URL}
    # volumes:
    #   - ./src/host:/etc/host
    command: 'npm start'
    depends_on:
      - db


   backend3: 
    container_name: backend-3
    # build: .
    image: server-todoapp:1.0
    # ports: 
    #  - 4800:4400
    # environment: 
    #     SEQ_DB: postgres
    #     SEQ_USER: postgres
    #     SEQ_PW: root123
    #     PORT: 5200
    #     DATABASE_URL: ${DATABASE_URL}
    # volumes:
    #   - ./src/host:/etc/host
    command: 'npm start'
    depends_on:
      - db   
 
   backend4: 
    container_name: backend-4
    image: server-todoapp:1.0
    command: 'npm start'
    depends_on:
      - db

   backend5: 
    container_name: backend-5
    image: server-todoapp:1.0
    command: 'npm start'
    depends_on:
      - db

   backend6: 
    container_name: backend-6
    image: server-todoapp:1.0
    command: 'npm start'
    depends_on:
      - db

   backend7: 
    container_name: backend-7
    image: server-todoapp:1.0
    command: 'npm start'
    depends_on:
      - db

   backend8: 
    container_name: backend-8
    image: server-todoapp:1.0
    command: 'npm start'
    depends_on:
      - db

   backend9: 
    container_name: backend-9
    image: server-todoapp:1.0
    command: 'npm start'
    depends_on:
      - db

   backend10: 
    container_name: backend-10
    image: server-todoapp:1.0
    command: 'npm start'
    depends_on:
      - db


   db:
     container_name: 'db'
     image: postgres
     ports:
     - "5200:5432"
     environment:
       POSTGRES_USER: postgres
       POSTGRES_PASSWORD: root1234
     volumes:
      - ./src/init.sql:/docker-entrypoint-initdb.d/init.sql


   nginx:
     container_name: server-nginx
     image: nginx
     ports: 
      - 4500:80
     volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/snippets/cors_config.conf:/etc/nginx/snippets/cors_config.conf
      - ./nginx/snippets/cors-sites.conf:/etc/nginx/snippets/cors-sites.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
     depends_on:
      - backend1
      - backend2
      - backend3
      - backend4
      - backend5
      - backend6
      - backend7
      - backend8
      - backend9
      - backend10

